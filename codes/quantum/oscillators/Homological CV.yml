#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################


code_id: homological_cv
physical: oscillators
logical: oscillators

name: 'Homological CV Code'

introduced: '\cite{arXiv:1601.02544}'

description: 'The Homological CV Code construction defines a stabilizer code over \(n\) oscillators to encode a single oscillator state based on the homology of an \(n-1\) simplex. The stabilizer generators are defined by two orthogonal subspaces of the \(C_1\) in the chain complex. \(C_X = \partial_2 C_2\) and \(C_P = \partial_1^T Q\) for some \(Q \subset C_0\). The standard approach would use \(Q = C_0\), which would mean the logical dimension would be the dimension of the 1st homology group \(H^1\), however \(H^1\) is trivial for the \(n-1\) simplex, so we choose \(Q \neq C_0\) such that we lose exactly one stabilizer, giving us a stabilizer code instead of a single stabilized state.'

protection: 'Protects against certain types of erasure errors (depending on the specific dimension). Certain constructions also protect arbitrary sized errors on multiple photon states.'

features:

  encoders:
    - 'Encoding depends on the specific dimension, but can generally be done using QND gates (generalized CX gates) and Fourier transform gates.'

  decoders:
    - 'Decoding requires a different circuit for each possible erasure error, with no general circuit decoding any possible erasure error. Every circuit relies on a generalized CPLUS operator, which \cite{arXiv:1601.02544} calls the ''QND Gate'' and is defined as \(QND_c | x , y \rangle = |x + c y, y \rangle\).'

realizations:
  - 'No experimental realization, however \cite{arXiv:1601.02544} describes a potential experimental optical procedure for the simplest non-trival code with 5 modes.'

relations:
  parents:
    - code_id: oscillators_into_oscillators
      detail: ''

  cousins:
    - code_id: css
      detail: 'Very closely related to the discrete homological code case, however we use trivial homology by removing one generator. This is equivalent to taking the usual homological discrete construction, extending it to the CV case, and removing a specific stabilizer generator.'
