#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

code_id: topological_abelian
physical: qudits
logical: qudits

name: 'Abelian topological code'
#introduced: ''

description: |
  Code whose codewords realize topological order associated with an Abelian anyon theory, equivalently, a unitary braided fusion category which is an Abelian group under fusion \cite{arxiv:2004.12048}.
  Any theory is defined by an Abelian group \(A\) of anyon types whose multiplication relations define the fusion rules, and a set of exchange statistics \(\theta(a)\in U(1)\) obtained by exchanging two anyons of type \(a\in A\).

  The exchange statistics in turn define the \textit{braiding relations} \(B(a,b) = \frac{\theta(ab)}{\theta(a)\theta(b)}\) between all pairs of anyons types \(a,b\).
  An anyon theory is called \textit{non-modular} or \textit{pre-modular} if there exists an anyon \(a\) braids trivially with all anyons, i.e., \(B(a,b)=1\) for all \(b\).

  All 2D abelian topological orders can be understood within the subsystem stabilizer formalism \cite{arxiv:2211.03798}.
  As such, many of the operations one can perform on such codes have both a stabilizer and a topological-phase interpretation.
  Stabilizer generators of 2D topological codes acting on 1D loops of qubit can be interpreted as one-form symmetries of the underlying phase realized by the code.
  Identification of an anyon \(a\) with the vacuum is equivalent to adding string excitation operators corresponding to \(a\) to the stabilizer group and taking the center to get another stabilizer group.
  Code states of this new stabilizer code correspond to a \textit{condensed phase} of the parent topological phase.
  The remaining unidentified parent-phase anyons behave differently with respect to the new condensed-phase state.
  Some become \textit{confined} while the remaining ones pick up new braiding relations.


features:
  encoders:
    - 'Any local quantum circuit connecting ground states of topological orders with non-isomorphic Abelian groups must have depth that is at least linear in the diameter of the system \cite{arXiv:1407.2926}.'
  general_gates:
    - 'Clifford gates can be implemented by braiding defects; for qubit-based stabilizer codes realizing Abelian topological phases, see Refs. \cite{arxiv:1305.7203,arxiv:2210.09282}. Most of such designs focus on the surface code \cite{arxiv:1004.1838,arXiv:1104.5047,arXiv:1208.0928,arXiv:1508.04166,arXiv:1609.04673,arXiv:2103.08381}.'
  fault_tolerance:
    - 'Fault-tolerant logical operations can be interpreted as anyon condensation events \cite{arxiv:2212.00042}.'
    - 'Modular decoding applicable to all fault-tolerant protocols based on topological qubit stabilizer codes \cite{arxiv:2303.04846}.'
  code_capacity_threshold:
    - 'Noise thresholds can be formulated as anyon condensation transitions in a topological field theory \cite{arxiv:2301.05687}, generalizing the mapping of the effect of noise on a code state to a statistical mechanical model \cite{arxiv:quant-ph/0110143,arXiv:1208.2317,arXiv:1311.7688,arXiv:1809.10704}.'


#notes:
#  - ''

relations:
  parents:
    - code_id: qudit_subsystem_stabilizer
      detail: 'All Abelian topological orders can be realized as modular-qudit subsystem stabilizer codes by starting with an abelian quantum double model (slightly different from those of Ref. \cite{arxiv:2112.11394}) and a family of Abelian TQDs that generalize the double semion anyon theory and gauging out certain bosonic anyons \cite{arxiv:2211.03798}. The stabilizer generators of the new subsystem code may no longer be geometrically local.'
    - code_id: topological
      detail: 'All Abelian topological orders can be realized as modular-qudit subsystem stabilizer codes \cite{arxiv:2211.03798}. Non-abelian topological orders are purported not to be realizable with Pauli stabilizer codes \cite{arxiv:1605.03601}.'


# Begin Entry Meta Information
_meta:
  # Change log - most recent first
  changelog:
    - user_id: VictorVAlbert
      date: '2022-02-08'
