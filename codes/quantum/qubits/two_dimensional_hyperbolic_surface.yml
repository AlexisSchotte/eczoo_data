#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

# code id, physical, logical are all lower case
code_id: two_dimensional_hyperbolic_surface
physical: qubits
logical: qubits

# Apostrophes are denoted by two apostrophe characters, i.e., ''
# Code title is singular
name: 'Two-dimensional hyperbolic surface code'

# First reference with the code (optional).
introduced: '\cite{arXiv:1506.04029}'

# Anything applicable to a larger parent set of codes (see below) should go in
# that entry instead of here.
description: 'Hyperbolic surface codes are closely related to the toric code (aka surface code) except the tessellations on the manifold are derived on a hyperbolic geometry (ie, non-Euclidean geometry, think saddle surfaces when defined on a 2D plane) instead of Eulicdean surfaces. For a tessellation involving regular polygons with \( r \) sides and \( s \) polygons meeting at each edge, the number of logical qubits is given by \( k = (1-2/r - 2/s) n + 2 \). As with other surface codes, the physical qubits sit on the edges of the tiles and the logical qubits sit at the center of the tile. Some possible tilings are \( {r,s}: {7,3}, {5,4} \). The weight of the stabilizer generators are dependent on the tiling, with {5,4} having lower weight than {7,3}. This family of codes describes systems on a closed 2D surface, however, in a physical implementaion the surface would have open boundary conditions. Creating explicit boundaries inhibits the efficiency of the code, reducing the code to a constant distance. '
  
protection: 'Protects against Pauli errors with distance \( d \propto \log(n) \). Code parameters are \( [[n, (1-2/r - 2/s)  n + 2, \log(n) ]] \)'


features:

  rate: 'Two-dimensional hyperbolic surface codes have an asymptotically constant encoding rate \( k/n \) with a distance scaling logarithmically \( \log(n) \) when the surface is closed. The encoding rate depends on the tiling \( {r,s} \) and is given by \( k/n = (1-2/r - 2/s) + 2/n \) which approaches a constant value as the number of physical qubits grows. The weight of the stabilizers is \( r \) for \( Z \)-checks and \( s \) for \( X \)-checks. For open boundary conditions, the code reduces to constant distnace.'

#   encoders:

#   transversal_gates: 

#   general_gates:

  decoders:
    - 'Due to the symmetries of hyperbolic surface codes, optimal measurement schedules of the stabilizers can be found \cite{arXiv:2010.09626}.'

# fault_tolerance:

  threshold:
    - 'Since the distance is logarithmic, the threshold exists for a given tiling under minimum weight decoding \cite{doi:10.1103/PhysRevA.87.020304}.'
    - 'For a {5,4} tiling, the threshold is between 1\(\%\) - 5\(\%\) (compared to the toric code 10.3\(\%\))'
    - 'For larger tilings, the lower bound on the distance decreases suggesting the threshold will also decrease.'

realizations:
  - 'Here, it important to note that infinite dimensional code states for oscillators are non-normalizable. '

notes:
  - 'Useful review article, Sec III A for a description of this code \cite{arXiv:2103.06309}'
  - 'Connection to percolation theory as shown in \cite{arXiv:1205.7036}'
  - 'There exist hyperbolic versions of the color code, which could simplify the implementation of logical gates \cite{arXiv:1804.06382}.'

relations:
  parents:
    - code_id: surface
      detail: 'The two-dimensional hyperbolic surface code belongs to the family of codes which place physical qubits on the edges of a tesselated unit on the surface'

#   cousins:
#     - code_id: four_dimensional_hyperbolic_surface
#       detail: '4D cousin of this 2D code'
#     - code_id: holographic
#       detail: 'Similar to hyperbolic codes, holographic codes tesselate hyperbolic surfaces but place the physical qubits on the edge of the entire surface rather than on the edge of the tiles. '
