#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

# Use UTF-8 unicode encoding
# AMS-TeX commands are rendered inside \( ... \) using MathJaX.
# Allowed external bibliographic references are
#    \cite{arXiv:#.#} or \cite{arXiv:quant-ph/#},
#    \cite{doi:#}, or, as a last resort
#    \cite{manual:{(enter citation line incl. author and year here)}}
# External websites such as code tables, coding theory packages, github pages linked as
#    \url{https://example.com/example}
#    \href{https://example.com/example}{link text}
# Internal references to codes are 
#    \hyperref[code:code_id]{link text}
# Delete instructional comments when submitting

# code id, physical, logical are all lower case
code_id: binary_quantum_goppa
physical: bits
logical: qubits

# Apostrophes are denoted by two apostrophe characters, i.e., ''
# Code title is singular
name: 'Quantum Goppa Code' 

# First reference with the code (optional).
introduced: '\cite{arxiv:quant-ph/0501074}'

# Anything applicable to a larger parent set of codes (see below) should go in
# that entry instead of here.
description: 'Binary Quantum Goppa codes are a family of [[n,k,d]] quantum stabilizer codes over \(\mathbb{F}_{q^m}\) where q=2 and m is a fixed integer. These codes are generated
	using classical Goppa codes. Specifically, let F/\(\mathbb{F}_q\) be an algebraic function field of one variable, and let \(\sigma \) be an automorphism of order 2 
	of F which leaves \(\mathbb{F}_q\) invariant, and let \(P_1, \cdots, P_n \) be pairwise distinct places of degree one such that \( \sigma P_i = P_j\) for all
	i,j = \(1, \cdots, n\). A place P_i of F/ \(\mathbb{F}_q \) is the unique maximal ideal of a discrete valuation ring of the function field. Let \( \nu \) be a  differential 
	that satisfies the properties guaranteed by  the strong approximation theorem of discrete evaluations. Let G be a divisor such that \( \sigma G = G \) and the 
	discrete valuation corresponding to place \(P_i \) of G and the discrete valuation corresponding to place \(\sigma P_i \) of G are both 0 for all i. THen we can define
	a code C(G)  = \(\{ f(P_1), \cdots, f(P_n), f(\sigma P_1), \cdots , f(\sigma P_n) | f \in \mathcal{L}(G)\} \subst \mathbb{F}_q^{2n}\) and 
	a code C(H) where H = \( (P_1 + \cdots + P_n + \sigma P_1 + \cdots + \sigma P_n) - G + \nu \). Then the dual of C(G) with respect to the weighted symplectic inner 
	product with weights s_i on \( \mathbb{F}_q^n\) is equivalent to C(H). Therefore, the orthogonal code of C(G) is generated by H. Using these properties and the assumption
	that H is a subgroup of G, we can construct a classical Goppa code C(D,G), where D is the sum of all \(P_i\). Using C(D,G), we can construct an binary [[n,k,d]] quantum stabilizer code.'
	  

protection: 'Protects against weight t errors where \( 0 < t \leq  \lfloor \frac{d^*-g-1}{2} \) where \( d^* = deg G + 2 -2g \) and g is the genus of the function field.'  

# This field starts a list of specific labeled subfields; do not leave it 
# empty. If empty, comment out. Also, indentations are important!
features:

  # The fields below relate to specific properties of the code that are worth
  # noting. In some cases (see below), there might be multiple pieces of
  # information associated with a field (e.g., mutliple encoders/decoders,
  # multiple facts about fault tolerance, etc.); in such cases, the field
  # accepts a list of text entries, with one item per piece of information.
  #
  # Any fields below should be omitted if they do not apply.

  # rate: 'k/n'

  # This field that starts a list of strings, indexed by a dash; do not leave it
  # empty. If empty, comment out.
  encoders: 
	- 'Encoding defined in Matsumoto paper \cite{arxiv:quant-ph/0107129}. The Matsumoto encoding uses a technique from Ashikhmin and Knill \cite{arxiv:quant-ph/0005008} to encode
	  quantum stabilizer codes.'

  #transversal_gates: 'Transversal ... gates \cite{doi:ok-paper}. Comment out if doesn''t apply.'

  #general_gates:
  #  - 'Universal gate set achieved by either additional ... gate.'
  #  - 'Magic-state distillation protocols'
  #  - 'kth Clifford hierarchy gates obtained by ... circuits'

  decoders: 
	- 'Farran algorithm \cite{arxiv:math.AG/9910151}'
   

#  fault_tolerance:
#    - 'Transversal gates are fault-tolerant w.r.t. ... noise \cite{doi:ok-paper}'
#    - 'Other fault-tolerant gadgets (measurements, encoders, error correcting steps)'
#    - 'Noise-model-preserving gadgets, noise-biased gates, fault-tolerant flag error correction'
#    - 'Pieceable fault tolerance.'

#  threshold: 
#    - '2\% error-correction threshold  ... with perfect ... decoder \cite{arxiv:another-paper}.'
  
  # Propose a field that you feel is applicable to a large and interesting class of codes
  #some_other_field:
  # - 'detail'

#realizations:
  # List and explain the different "domains" of realizations in list items.
  # Group closely related realizations into a single item. It's OK to have a
  # single list item. Each item should more or less correspond to what would be
  # said in a paragraph.
  # - 'Code used in DVDs \cite{doi:####...}, 5G, etc.'
  #- 'Realized in trapped-ion quantum devices \cite{arXiv:####.#####}, etc.'
notes:
  - 'k  = \(dim G - dim(G-P_1 - \cdots - P_n - \sigma P_1 - \cdots  - \sigma P_n) - n\)' 
  - '\(d \geq n - \lfloor \frac{deg G}{2} \rfloor\)'
  - 'Can also be constructed using CSS codes over hyperelliptic curves \cite{}. The construction provided here is Matsumoto''s construction.' 

relations:
  parents:
    - code_id: quantum_algebraic_geometric
      detail: 'quantum_algebraic_geometric codes include binary quantum goppa codes.'
#    - code_id: 
#      detail: 'code_id2 is a code family that is constructed in a seemingly different way than this code, yet still includes this code.'
#    - code_id: code_id3
#      detail: 'code_id3 is code family described by a property shared by this code other than physical space (e.g., topological)'

#  cousins:
#    - code_id: code_id4
#      detail: 'code_id4 are other codes of similar encoding but with different physical space structures (classical or quantum)'
#    - code_id: code_id5
#      detail: 'code_id5 are codes from other families that could also be constructed this way. This entry goes into the code family that is ''smaller''.'
    - code_id: goppa
      detail: 'goppa codes are used in the construction of this code'
