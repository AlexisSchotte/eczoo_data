#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

code_id: eastab
physical: qubits
logical: qubits

name: 'EA qubit stabilizer code'
introduced: '\cite{arxiv:quant-ph/0608027,arxiv:quant-ph/0610092}'

description: |
  Constructed using a variation of the stabilizer formalism designed to utilize pre-shared entanglement between sender and receiver.
  A code is typically denoted as \([[n,k;e]]\) or \([[n,k,d;e]]\), where \(d\) is the distance of the underlying non-EA \([[n,k,d]]\) code, and \(e\) is the number of required pre-shared maximally entangled Bell states (ebits).
  While other entangled states can be used, there is always a choice a generators such that the Bell state suffices while still using the fewest ebits.

  The dual of an EA qubit stabilizer code is also an EA qubit stabilizer code whose logical qubits and ebits are interchanged, \(k\leftrightarrow e\) \cite{arxiv:1010.5506}.

  An \([[n,k+e;e]]\) EA stabilizer code can be constructed from an ordinary \([[n,k]]\) stabilizer code with check matrix \(H=(A|B)\), where the required number of ebits is \(e = \text{rank}(AB^T+BA^T)\) \cite{arxiv:0804.1404}.

protection: |
  There are quantum Griesmer \cite{doi:10.1007/s11128-015-1143-5} and Plotkin \cite{doi:10.1103/PhysRevA.87.032309} bounds for EA qubit stabilizer codes.

features:
  rate: 'Asymptotically good EA qubit stabilizer codes exist \cite{doi:10.1007/s10623-014-9997-6}.'
  encoders:
    - 'Fault-tolerant encodes utilizing pre-shared entanglement \cite{arxiv:2405.07242}.'
  decoders:
    - 'Optical implementation of a minimal code using hyper-entangled states \cite{arxiv:0807.4906}.'

notes:
  - 'Tables of bounds and examples of EA qubit (and EA qutrit) stabilizer codes for various \(n\) and \(k\), based on algorithms developed in Refs. \cite{arxiv:2007.01249,arxiv:2207.05647,doi:10.1007/s11128-023-04211-x}, are maintained by M. Grassl at this \href{https://codetables.markus-grassl.de/}{website}.'
  - 'See Ref. \cite{arxiv:2207.05647} for code tables and bounds on performance.'
  - 'See Ref. \cite{arxiv:quant-ph/9604024} for related notions.'


relations:
  parents:
    - code_id: ea_qubits_into_qubits
    - code_id: ea_galois_stabilizer
      detail: 'EA Galois-qudit stabilizer codes reduce to EA qubit stabilizer codes for \(q=2\).'
  cousins:
    - code_id: qubit_stabilizer
      detail: 'EA qubit stabilizer codes utilize additional ancillary qubits in a pre-shared entangled state, but reduce to qubit stabilizer codes when said qubits are interpreted as noiseless physical qubits. Qubit stabilizer codes can be used to obtain shortened EA qubit stabilizer codes \cite{arxiv:2205.13732}.'
    - code_id: hybrid_stabilizer
      detail: 'EA hybrid stabilizer codes can be defined \cite{arxiv:0802.2414}.'
    - code_id: binary_linear
      detail: 'Any linear binary code can be used to construct an EA qubit stabilizer code \cite{arxiv:quant-ph/0608027,arxiv:quant-ph/0610092,doi:10.1007/s10623-014-9997-6}.'
    - code_id: q-ary_linear
      detail: 'Any linear quaternary linear code can be used to construct an EA qubit stabilizer code \cite{arxiv:quant-ph/0610092}.'
    - code_id: qubit_css
      detail: 'As opposed to CSS codes, EA qubit stabilizer codes can be constructed from any linear binary code.'
    - code_id: hybrid_qudit_oscillator
      detail: 'A minimal EA qubit stabilizer code has been realized in using hyper-entangled states \cite{arxiv:0807.4906}.'
    - code_id: qubit_concatenated
      detail: 'There exist concatenated EA qubit stabilizer codes that saturate the EA quantum Griesmer and Plotkin bounds \cite{arxiv:2412.16082}.'
    - code_id: ea_mds
      detail: 'There exist concatenated EA qubit stabilizer codes that saturate the EA quantum Singleton bound \cite{arxiv:2412.16082}.'



# Begin Entry Meta Information
_meta:
  # Change log - most recent first
  changelog:
    - user_id: VictorVAlbert
      date: '2023-01-12'
    - user_id: LaneGGunderman
      date: '2023-01-12'
    - user_id: VictorVAlbert
      date: '2022-07-14'
