#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

code_id: translationally_invariant_stabilizer.yml

name: 'Translationally-invariant stabilizer code'
introduced: '\cite{arXiv:1101.1962,arXiv:1204.1063}'

description: |
  A family of \hyperref[code:galois_stabilizer]{Galois stabilizer codes} acting on qudits of prime dimension \(p\)
  (\hyperref[code:stabilizer]{stabilizer codes} in the case that \(p = 2\)). A code in the family has qudits organized on a lattice
  modeled by the additive group \(\mathbb{Z}^D\) for spatial dimension \(D\) such that each lattice point, referred to as a site,
  contains a finite number \(q\) qudits. The code is specified by a stabilizer group that is generated by site-local Pauli operators
  and is translationally invariant with respect to the lattice. Such codes are geometrically local.
  
  A single-qudit Pauli operator can be specified by the lattice coordinate of the site and the \(\mathbb{F}_p^{2q}\) symplectic vector
  representation of the Pauli operator within the site. The stabilizer group of the translationally invariant code is generated by
  site-local Pauli operators and their translations. As each lattice coordinate can be represented by a Laurent monomial of \(D\)
  formal variables, the multiplicative group of finitely supported Pauli operators modulo phase factors on the lattice of dimension
  \(D\) with \(q\) qubits per site is isomorphic to the additive group of Laurent polynomial column vectors of length \(2q\) in \(D\)
  formal variables.
  
  As an example with \(p = 2\) and \(D = 3\), \(P(1, 2, 3; e_1)P(-1, 2, 4; e_{q+2})\) is the Pauli operator that applies \(X\) to
  qubit \(1\) of lattice point \((1, 2, 3)\) and applies \(Z\) to qubit \(2\) of lattice point \((-1, 2, 4)\). This operator can be
  equivalently expressed by the Laurent polynomial \(x_1x_2^2x_3^3e_1 + x_1^{-1}x_2^2x_3^4e_{q+2}\).
  
  All stabilizer codes can be thought of as translationally invariant stabilizer codes for \(D = 0\), as the lattice is degenerate and
  consists of a single site.
  
  For \(p = 2, D = 2\), translationally invariant stabilizer code Hamiltonians with topological order are equivalent to multiple
  copies of the toric code\cite{arXiv:1812.11193}.
  
  For \(p = 2, D = 3\), translationally invariant stabilizer code Hamiltonians with topological order can be characterized by four
  coarse classes\cite{arXiv:1908.08049}:
  
  1. Topological quantum field theory: Excitations are mobile in all 3 dimensions. Such codes are conjectured to be equivalent to
  multiple copies of the 3D toric code.
  
  2. Foliated type-I: Excitations are mobile in less than 3 dimensions, but codes can be grown by "foliation"â€”stacking copies of the
  2D toric code.
  
  3. Fractal type-I: Excitations are mobile in less than 3 dimensions, and codes are not foliated.
  
  4. Type-II: Excitations are not mobile in any dimension.

notes:
  - 'More on the correspondence between Laurent polynomials and translationally-invariant codes can befound in \cite{arXiv:1607.01387} and Sec. IV of \cite{arXiv:1812.01625}.'

relations:
  parents:
    - code_id: qldpc
      detail: 'Translationally-invariant stabilizer codes are geometrically local.'
  cousins:
    - code_id: surface
      detail: 'Translation-invariant 2D qubit topological stabilizer codes are equivalent to several copies of the Kitaev surface code via a local constant-depth Clifford circuit \cite{arXiv:1103.4606,arXiv:1107.2707,arXiv:1607.01387}.'
    - code_id: qudit_surface
      detail: 'Translation-invariant 2D prime-qudit topological stabilizer codes are equivalent to several copies of the qudit surface code via a local constant-depth Clifford circuit \cite{arxiv:1812.11193}.'
    - code_id: topological_abelian
      detail: 'Translationally-invariant stabilizer codes can realize abelian topological orders. Conversely, abelian topological codes need not be translationally invariant, and can realize multiple topological phases on one lattice.'
    - code_id: fracton
      detail: 'Translationally-invariant stabilizer codes can realize fracton orders. Conversely, fracton codes need not be translationally invariant, and can realize multiple phases on one lattice.'
