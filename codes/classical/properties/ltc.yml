#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

code_id: ltc

name: 'Locally testable code (LTC)'
short_name: 'LTC'
introduced: '\cite{doi:10.1145/103418.103428,manual:{Sanjeev Arora. \emph{Probabilistic checking of proofs and hardness of approximation problems}. UC Berkeley, 1994.},doi:10.1137/S0097539793255151,arxiv:1307.3975}'

description: |
  Code for which one can efficiently check whether a given string is a codeword. Efficiency of the verification is quantified by the code's \textit{query complexity} \(u\), while effectiveness is quantified by the code's \textit{soundness} \(R\).

  Typically, one looks at how \(R\) scales with increasing code size for infinite families of codes, defining LTC families as those for which the soundness is asymptotically constant. LTC families that also have asymptotically constant distance, rate, and query complexity are called \(c^3\)\textit{-LTCs}. The first two such families are classical codes arising from the expander lifted-product quantum code construction and left-right Cayley complex codes.

  For a definition for binary alphabets, see child entry below. For a technical definition for general alphabets, see Ref. \cite{doi:10.1007/978-3-642-16367-8_6}.

notes:
  - 'LTCs first appeared implicitly in works on probabilistically checkable proofs (PCPs) \cite{doi:10.1016/0022-0000(93)90044-W,doi:10.1007/BF01200056,doi:10.1145/146585.146605,doi:10.1145/103418.103428,doi:10.1145/273865.273901,doi:10.1145/278298.278306}; see Ref. \cite{doi:10.1007/978-3-642-16367-8_6} for a detailed review.'

relations:
  parents:
    - code_id: ecc
  cousins:
    - code_id: qltc

# Begin Entry Meta Information
_meta:
  # Change log - most recent first
  changelog:
    - user_id: VictorVAlbert
      date: '2022-09-27'
