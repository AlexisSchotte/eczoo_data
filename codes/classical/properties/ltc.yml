#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

code_id: ltc

name: 'Locally testable code (LTC)'
short_name: 'LTC'
introduced: '\cite{doi:10.1145/103418.103428,manual:{Sanjeev Arora. \emph{Probabilistic checking of proofs and hardness of approximation problems}. UC Berkeley, 1994.},doi:10.1137/S0097539793255151,arxiv:1307.3975}'

description: |
  Code for which one can efficiently check whether a given string is a codeword. Efficiency of the verification is quantified by the code's \textit{query complexity} \(k\), while effectiveness is quantified by the code's \textit{soundness} \(R\).

  Typically, one looks at how \(R\) scales with increasing code size for infinite families of codes, defining LTC families as those for which the soundness is asymptotically constant. LTC families that also have asymptotically constant distance, rate, and query complexity are called \(c^3\)\textit{-LTCs}. The first two such families are classical codes arising from the expander lifted-product quantum code construction and left-right Cayley complex codes.

  More technically, we recount what it means for a binary code \(C\) of length \(n\) to be \((k,R)\)-locally testable \cite[Thm. 1.1]{arxiv:2111.04808}. Similar definitions can be done for codes on more general alphabets \cite{doi:10.1007/978-3-642-16367-8_6}. The idea is to reliably test whether a given bit-string \(x\) is in the code by only sampling subsets of \(k\) bits. To have something to check against, we define a collection of length-\(w\) subsets \(S\) of bit locations that are called \textit{allowed local views}.

  A code is LTC if the following two conditions are satisfied. First, if \(x\) is a codeword, then all of its restrictions \(x|_S\) to the subsets \(S\) are allowed local views,
  \begin{align}
    x\in C \Rightarrow x|_S \in \{\text{allowed local views}\}~.
  \end{align}
  This guarantees that codewords can indeed be determined from this limited sampling procedure.

  Second, the probability that a given restriction is not an allowed local view is lower-bounded by the relative distance to the code,
  \begin{align}
    \text{Pr}_S (x|_S\text{ not allowed local view}) \geq R \frac{D(x,C)}{n}~,
  \end{align}
  where \(D(x,C)\) is the Hamming distance between \(x\) and the closest codeword to \(x\). This condition ensures that strings \(x\) can be deemed to be not in the codespace with high probability, i.e., with probability increasing as \(x\) gets farther from the code.

notes:
  - 'LTCs first appeared implicitly in works on probabilistically checkable proofs (PCPs) \cite{doi:10.1016/0022-0000(93)90044-W,doi:10.1007/BF01200056,doi:10.1145/146585.146605,doi:10.1145/103418.103428,doi:10.1145/273865.273901,doi:10.1145/278298.278306}; see Ref. \cite{doi:10.1007/978-3-642-16367-8_6} for a detailed review.'

relations:
  parents:
    - code_id: ecc
  cousins:
    - code_id: qltc

# Begin Entry Meta Information
_meta:
  # Change log - most recent first
  changelog:
    - user_id: VictorVAlbert
      date: '2022-09-27'
