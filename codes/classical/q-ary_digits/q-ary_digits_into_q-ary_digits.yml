#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

code_id: q-ary_digits_into_q-ary_digits
physical: q-ary_digits
logical: q-ary_digits

name: 'Galois-field \(q\)-ary code'
short_name: '\(q\)-ary'
#introduced: ''

description: |
  Encodes \(K\) states (codewords) in \(n\) \(q\)-ary coordinates over the field \(GF(q)\) and has distance \(d\). Usually denoted as \((n,K,d)_q\). The distance is the minimum number of coordinates where two strings in the code differ.

  \begin{defterm}{Finite fields}
  \label{topic:finite-fields}
  Galois or finite fields \(GF(q)=\mathbb{F}_q\) are sets of \(q\) elements closed under addition and multiplication.
  They are finite analogues of the real or complex numbers, and a unique field exists for every prime power \(q=p^m\) with prime \(p\).
  The prime-field case reduces to \(\mathbb{Z}_p\), a group under addition that is promoted to a field by defining multiplication modulo \(p\).
  Every finite field comes with a zero element (additive identity), a one element (multiplicative identity), and additive (multiplicative) inverses for all (nonzero) elements.  
  They come with a trace operation, the \textit{field trace}, which maps elements \(\gamma \in GF(q)\) to elements of \(GF(p)\) as
  \begin{align}
    \text{tr}(\gamma)=\sum_{k=0}^{m-1}\gamma^{p^{k}}~.
  \end{align}
  Any field \(GF(q)\) can be thought of as an \(m\)-dimensional vector space over \(GF(p)\) a.k.a. the \(m\)th \textit{extension} of \(GF(p)\).
  Along those lines, elements of fields such as \(GF(p^{ml})\) can be written as \(m\)-dimensional vectors over \(GF(p^l)\) or \((m\times l)\)-dimensional matrices over \(GF(p)\); this is used to convert between ordinary block codes and matrix-based codes.
  An element whose powers exhaust all nonzero field elements is called \textit{primitive}.

  An example is the quaternary Galois field \(GF(4) = \{0,1,\omega, \omega^2=\bar{\omega}\}\) with \(p=m=2\).
  In this case, \(\omega\) can be interpreted as a third root of unity, but more formally it is defined as a solution to the polynomial equation \(\1+x+x^2=0\).
  The field trace in this case is similar to taking the real part of a complex number, \(\text{tr}(\gamma) = \gamma + \gamma^2\) for any element \(\gamma\).
  Field elements can be represented as two-dimensional vectors with binary elements, \(GF(4)=GF(2^2)\), using the basis \(\omega\cong(1,0)\) and \(\bar{\omega}\cong(0,1)\):
  \begin{align}
    0&\leftrightarrow(0,0)\cong0\omega+0\bar{\omega}\\
    1&\leftrightarrow(1,1)\cong1\omega+1\bar{\omega}\\
    \omega&\leftrightarrow(1,0)\cong1\omega+0\bar{\omega}\\
    \bar{\omega}&\leftrightarrow(0,1)\cong0\omega+1\bar{\omega}~.  
  \end{align}
  \end{defterm}


protection: |
  The standard metric for Galois-field \(q\)-ary codes is the Hamming metric, but other metrics also exist \cite{arxiv:2212.00431}.
  A code detects errors on up to \(d-1\) coordinates, corrects erasure errors on up to \(d-1\) coordinates, and corrects general errors on up to \(\left\lfloor (d-1)/2 \right\rfloor\) coordinates.

  \begin{defterm}{Weight enumerator and four fundamental parameters}
  \label{topic:weight-enumerator}
  Determining protection and bounds on code parameters can also be done using the code's \textit{weight enumerator} (cf. \hyperref[topic:quantum-weight-enumerator]{quantum weight enumerators}),
    \begin{align}
    \begin{split}
      A(x,y)&=\sum_{j=0}^{n}A_{j}x^{n-j}y^{j}\\
      A_{j}&=\text{number of wt-}j\text{ codewords}~.
    \end{split}
    \end{align}
  The weight enumerator and it's Fourier transform the \textit{dual weight enumerator} satisfy the \textit{MacWilliams identity} \cite{doi:10.1002/j.1538-7305.1963.tb04003.x,doi:10.1002/j.1538-7305.1972.tb01947.x}; see \cite[Ch. 5]{preset:MacSlo}.

  The distance of the code is the value of the first nonzero coefficient \(A_j\), while the \textit{dual distance} is the first nonzero coefficient of the dual weight enumerator.
  The \textit{number} of the code is the number of nonzero \(A_j\)'s, corresponding to the number of distinct nonzero distances between codewords.
  The \textit{external distance} is the number of nonzero coefficients of the dual weight enumerator.
  The distance, dual distance, number and external distance make up the \textit{four fundamental parameters} of a code \cite{doi:10.1016/S0019-9958(73)80007-5}\cite[Ch. 5]{preset:MacSlo}.

  Other types of weight enumerators includes the Hamming weight enumerator, Lee weight enumerator, joint weight enumerator, split weight enumerator, and biweight enumerator \cite{preset:MacSlo}.
  \end{defterm}

  Noise channels include the symmetric noise channel, asymmetric noise channels \cite{manual:{Varshamov, R. R. "Some features of linear codes that correct asymmetric errors." Soviet Physics Doklady. Vol. 9. 1965.},doi:10.1109/TIT.1973.1054954,doi:10.1016/S0019-9958(79)90329-2,manual:{Kl√∏ve, Torleiv. Error correcting codes for the asymmetric channel. Department of Pure Mathematics, University of Bergen, 1981.},doi:10.1142/6400}, and insertion/deletion noise.


features:
  rate: The rate of a \(q\)-ary code is usually defined as \(R=\frac{1}{n}\log_q K\) dits per symbol.
  decoders:
    - 'For small \(n\), decoding can be based on a lookup table. For infinite code families, the size of such a table scales exponentially with \(n\), so approximate decoding algorithms scaling polynomially with \(n\) have to be used. The decoder determining the most likely error given a noise channel is called the \textit{maximum-likelihood decoder}.'
    - 'Given a received string \(x\) and an error bound \(e\), a \textit{list decoder} returns a list of all codewords that are at most \(e\) from \(x\). The number of codewords in a neighborhood of \(x\) has to be polynomial in \(n\) in order for this decoder to run in time polynomial in \(n\).'

notes:
  - 'Tables of bounds and examples of linear codes for various \(n\) and \(k\), extending code tables by Brouwer \cite{manual:{Andries E. Brouwer, Bounds on linear codes, in: Vera S. Pless and W. Cary Huffman (Eds.), Handbook of Coding Theory, pp. 295-461, Elsevier, 1998.}}, are maintained by M. Grassl at this \href{http://codetables.markus-grassl.de/}{website}.'

relations:
  parents:
    - code_id: rings_into_rings
      detail: 'Galois fields are rings under addition.'


# Begin Entry Meta Information
_meta:
  # Change log - most recent first
  changelog:
    - user_id: VictorVAlbert
      date: '2022-02-16'
    - user_id: VictorVAlbert
      date: '2021-10-29'
