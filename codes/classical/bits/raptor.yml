#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

code_id: raptor
physical: bits
logical: bits

name: 'Raptor code'
introduced: '\cite{manual:{A. Shokrohalli. \emph{Raptor Codes}. IEEE Transactions on Information Theory, 2006}}'

description: |
  Raptor codes are erasure codes with two layers: a pre-code and a Luby-Transform (L-T) code.
  The pre-code is any traditional erasure code, which is applied first to the input to create some redundant data.
  The L-T code is then applied to the intermediate symbols from the pre-code to generate final output symbols to then be transmitted.

  The parameters for a Raptor code are /( (k, C, \Omega(x)) /), with /(C/) being the pre-code with dimension /( k /), and /( \Omega(x) /) being the degree distribution for the L-T code. 

protection: 'As a type of fountain code, a Raptor code is designed to correct erasure errors.'

features:

  decoders:
    - 'Raptor codes can be decoded using inactivation decoding \cite{arXiv:1706.05814}, which is a combination of belief-propogation decoding and Gaussian elimination decoding.'

  threshold: |
    The error probability of Raptor codes is measured in terms of its overhead, which is how many additional symbols are recieved above the dimension of the input /(k/). This relationship can vary widely depending on the input pre-code and degree distribution.
    For a well-designed degree distribution, the error probability of a Raptor code is directly related to the error probability of the pre-code's decoder. In other words, if there is a linear time decoder for the pre-code that has subexponentially small error probability, then the Raptor code's error will decrease exponentially with increasing overhead (past the /(n-k/) overhead symbols necessary for the pre-code).

realizations:
  - 'Two versions of Raptor codes have been standardized by IETF: \href{https://datatracker.ietf.org/doc/html/rfc5053}{R10} and \href{http://tools.ietf.org/html/rfc6330}{RaptorQ}. RaptorQ is the more advanced and more recent version.'
  - 'Raptor codes are useful in scenarios where erasure (i.e. weak signal or noisy channel) is common, such as in military or disaster scenarios.'
  - 'RaptorQ code used in mobile multimedia broadcast as specified in ETSI technical specifications.'
  - 'It is also used in the mobile \href{https://www.atsc.org/wp-content/uploads/2016/01/A331S33-174r6-Signaling-Delivery-Sync-FEC.pdf}{Next Gen TV} standard'

notes:
  - 'The times to encode and decode source blocks are both linear.'
  - 'The space requirement is /(1/R /), where /(R/) is the rate of the pre-code.'
  - 'Raptor codes with the simplest output distribution (L-T code) are called pre-code-only (PCO).'
  - 'Raptor codes have a systematic version which embeds the input data in the output.'
  - 'There is an open source RaptorQ implementation in \href{https://openrq-team.github.io/openrq/}{Java} and \href{https://github.com/cberner/raptorq}{Rust}' 

relations:
  parents:
    - code_id: luby-transform
      detail: 'Raptor codes using a trivial pre-code are L-T codes. Typically Raptor codes have constant-sized more overhead but are faster to decode.'
  cousins:
    - code_id: tornado
      detail: 'Tornado codes also use a multi-layer approach and so also has additional redundant data.'
