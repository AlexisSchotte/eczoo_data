#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

# Use UTF-8 unicode encoding
# AMS-TeX commands are rendered inside \( ... \) using MathJaX.
# Allowed external bibliographic references are
#    \cite{arXiv:#.#} or \cite{arXiv:quant-ph/#} (PREFERRED),
#    \cite{doi:#}, or, as a last resort
#    \cite{manual:{(enter citation line incl. author and year here)}}
# External websites such as code tables, coding theory packages, github pages linked as
#    \url{https://example.com/example}
#    \href{https://example.com/example}{link text}
# Internal references to codes are
#    \hyperref[code:code_id]{link text}
# Delete instructional comments when submitting

# code id, physical, logical are all lower case
code_id: hermitian_codes
physical: q-ary
logical: q-ary

# Apostrophes are denoted by two apostrophe characters, i.e., ''
# Code title (SINGULAR) + first reference(s) (optional).
name: 'Hermitian Codes'
introduced: '\cite{manual: {Goppa, Valerii Denisovich. "Codes on algebraic curves." Soviet Math. Dokl.. Vol. 24. 1981.}}'

# Anything applicable to a larger parent set of codes (see below) should go in
# that entry instead of here.
description: | 
  A Hermitian code is a type of algebraic geometry code where the codewords are evaluations of two-variable polynomials of total degree at most \(D\) on 
  the rational points of a Hermitian curve \(H(X,Y) = X^{q+1}  + Y^{q+1} - 1\). These evaluations may be made in the affine coordinates \( (X,Y) \) or 
  over projective coordinates \( [X:Y:Z] \) which contain as a subset the affine coordinates (this is the case when \(Z = 1 \)). In this entry we focus on 
  evaluations over projective coordinates, since doing so increases the length of the code. More precisely, fix \(r, D\) and let 
  \begin{align}
  M_D = \{f \in \mathbb{F}_{q}(X,Y) = \sum_{i+j \leq D}a_{i,j}X^{i}Y^{j}\}
  \end{align}
  be the message space of degree \(D\) polynomials and \(S = \{[X:Y:Z] \in \mathbb{P}^2 \mathbb{F_q} \mid H(X:Y:Z) = 0 \}\) where \(H(X:Y:Z) = X^{q+1} + Y^{q+1} - 
  Z^{q+1}\) is the homogenized Hermitian curve over the projective plane on \( \mathbb{F}_q \). Then the codewords \( C \) of the Hermitian code over \(\mathbb{F}_q\)
  are 
  \begin{align}
  C = \{(f(\alpha_i))_{\alpha_i \in S}, \: f \in M_D \}
  \end{align}. 
# Long fields such as this one can be written in other YML formats, such as the one using the pipe symbol
# protection: |
#   text...
#   more text...
protection: 'Protects against ... Pauli noise. Approximate code with parameters ... for noise model ... .'

# This field starts a list of specific labeled subfields; do not leave it
# empty. If empty, comment out. Also, indentations are important!
features:

  rate: |
  - 'When \(D < q + 1 \), \(k = \frac{(D+1)(D+2)}{2}\)' 
  - 'When \(D \geq q + 1 \), \(k = (q+1)D - \frac{q(q-1)}{2} + 1 \)' 
  
  encoders:
    - Multivariate Polynomial Evaluation 

  decoders:
    - 'Details about how syndrome measurements are done; discuss overhead, if applicable.'
    - 'MWPM decoding algorithm \cite{doi:good-paper} with ... overhead.'
    - 'Just-in-time decoder with ... \cite{arxiv:awesome-paper}.'

  fault_tolerance:
    - 'Transversal gates are fault-tolerant w.r.t. ... noise \cite{doi:ok-paper}'
    - 'Other fault-tolerant gadgets (measurements, encoders, error correcting steps)'
    - 'Noise-model-preserving gadgets, noise-biased gates, fault-tolerant flag error correction'
    - 'Pieceable fault tolerance.'

  code_capacity_threshold:
    - '\(1.5%\) error-correction threshold against some noise with *noiseless* decoder of some complexity \cite{arxiv:paper}.'
    - '\(5.2\%\) asymptotic upper bound from some estimation algortihm (Monte Carlo, e.g.) that may or may not have a feasible decoder.'

  threshold:
    - '\(0.3\%\) error-correction threshold ... with *noisy* ... decoder of some complexity \cite{doi:good-paper}.'
    - '\(10^{-5}\) computational threshold using concatenated scheme under ... noise with overhead of ... '
    - '\(4.5\%\) asymptotic lower bound on fault-tolerant threshold with ... noise, ... overhead, and ... complexity.'
    - '\(6.7\%\) threshold using magic-state distillation protocols assuming ... Clifford gates.'

  # Propose a field that you feel is applicable to a large and interesting class of codes
  #some_other_field:
  # - 'detail'

realizations:
  # List and explain the different "domains" of realizations in list items.
  # Group closely related realizations into a single item. It's OK to have a
  # single list item. Each item should more or less correspond to what would be
  # said in a paragraph.
  - 'Code used in DVDs \cite{doi:####...}, 5G, etc.'
  - 'Realized in trapped-ion quantum devices \cite{arXiv:####.#####}, etc.'

notes:
  - 'Bounds on n,k, or d for this class, unless mentioned in desciption.'
  - 'Links to code tables, github, GAP algebra packages, more papers \cite{arXiv:####.#####}.'
  - 'Connections to physics; based on \(H^4(\mathcal{BG},\mathbb{Z})\)'
  - 'Can reference other codes, but try to put such connections in the relations fields.'
  - 'Anything noteworthy that''s not above or below.'

relations:
  parents:
    - code_id: code_id1
      detail: 'The smallest code family that includes this code that is defined over the same physical space structure or alphabet.'
  cousins:
    - code_id: code_id2
      detail: 'Codes described by a property shared by this code other than physical space (e.g., topological, Hamiltonian-based). Can move to parent if the property was integral in the initial construction/motivation of the code.'
    - code_id: code_id3
      detail: 'Code family of similar encoding but with different physical space structures (qudit vs. qubit surface code).'
    - code_id: code_id4
      detail: 'Codes (classical or quantum) related on other ways to this code.'
